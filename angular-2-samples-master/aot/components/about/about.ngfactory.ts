/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../components/about/about';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../node_modules/@angular/router/src/directives/router_link.ngfactory';
import * as import9 from '@angular/router/src/router';
import * as import10 from '@angular/router/src/router_state';
import * as import11 from '@angular/common/src/location/location_strategy';
import * as import12 from '@angular/router/src/directives/router_link';
export class Wrapper_About {
  /*private*/ _eventHandler:Function;
  context:import0.About;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.About();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_About_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_About_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.About>;
  _About_0_3:Wrapper_About;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_About_Host0,renderType_About_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'about',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_About0(this.viewUtils,this,0,this._el_0);
    this._About_0_3 = new Wrapper_About();
    this.compView_0.create(this._About_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._About_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.About) && (0 === requestNodeIndex))) { return this._About_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._About_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const AboutNgFactory:import7.ComponentFactory<import0.About> = new import7.ComponentFactory<import0.About>('about',View_About_Host0,import0.About);
const styles_About:any[] = ([] as any[]);
var renderType_About:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_About,{});
export class View_About0 extends import1.AppView<import0.About> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _RouterLinkWithHref_10_3:import8.Wrapper_RouterLinkWithHref;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _el_22:any;
  _text_23:any;
  _text_24:any;
  _text_25:any;
  _arr_27:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_About0,renderType_About,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._arr_27 = import3.pureProxy1((p0:any):any[] => {
      return [p0];
    });
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'h1',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'Welcome',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n        This is a live demo of my Angular 2.0 sample components.\n    ',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_0,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n        I hope you will find these ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'a',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._RouterLinkWithHref_10_3 = new import8.Wrapper_RouterLinkWithHref(this.parentView.injectorGet(import9.Router,this.parentIndex),this.parentView.injectorGet(import10.ActivatedRoute,this.parentIndex),this.parentView.injectorGet(import11.LocationStrategy,this.parentIndex));
    this._text_11 = this.renderer.createText(this._el_10,'demos',(null as any));
    this._text_12 = this.renderer.createText(this._el_8,' useful and educational. Stay tuned for more progress soon.\n        Don\'t hesitate to tweet me at @helgevold with suggestions for more components.\n    ',(null as any));
    this._text_13 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_0,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'\n        Click ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_14,'a',new import3.InlineArray2(2,'href','http://www.syntaxsuccess.com/angular-2-articles'),(null as any));
    this._text_17 = this.renderer.createText(this._el_16,'here',(null as any));
    this._text_18 = this.renderer.createText(this._el_14,' for a full list of my Angular 2.0 articles.\n    ',(null as any));
    this._text_19 = this.renderer.createText(this._el_0,'\n\n    ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_0,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'\n        The source code for the full set of components is available on ',(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_20,'a',new import3.InlineArray2(2,'href','https://github.com/thelgevold/angular-2-samples'),(null as any));
    this._text_23 = this.renderer.createText(this._el_22,'GitHub',(null as any));
    this._text_24 = this.renderer.createText(this._el_20,'\n    ',(null as any));
    this._text_25 = this.renderer.createText(this._el_0,'\n\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_10));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._el_22,
      this._text_23,
      this._text_24,
      this._text_25
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.RouterLinkWithHref) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._RouterLinkWithHref_10_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_10_0_0:any = this._arr_27('/Demo/Spreadsheet');
    this._RouterLinkWithHref_10_3.check_routerLink(currVal_10_0_0,throwOnChange,false);
    this._RouterLinkWithHref_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    this._RouterLinkWithHref_10_3.checkHost(this,this,this._el_10,throwOnChange);
  }
  destroyInternal():void {
    this._RouterLinkWithHref_10_3.ngOnDestroy();
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._RouterLinkWithHref_10_3.handleEvent(eventName,$event) && result);
    return result;
  }
}