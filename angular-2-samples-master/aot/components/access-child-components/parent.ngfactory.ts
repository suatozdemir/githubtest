/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../components/access-child-components/parent';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/query_list';
import * as import9 from '../../../components/access-child-components/child';
import * as import10 from './child.ngfactory';
export class Wrapper_Parent {
  /*private*/ _eventHandler:Function;
  context:import0.Parent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.Parent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_Parent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_Parent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.Parent>;
  _Parent_0_3:Wrapper_Parent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Parent_Host0,renderType_Parent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'parent',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Parent0(this.viewUtils,this,0,this._el_0);
    this._Parent_0_3 = new Wrapper_Parent();
    this.compView_0.create(this._Parent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._Parent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Parent) && (0 === requestNodeIndex))) { return this._Parent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Parent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ParentNgFactory:import7.ComponentFactory<import0.Parent> = new import7.ComponentFactory<import0.Parent>('parent',View_Parent_Host0,import0.Parent);
const styles_Parent:any[] = ([] as any[]);
var renderType_Parent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_Parent,{});
export class View_Parent0 extends import1.AppView<import0.Parent> {
  _viewQuery_Child_0:import8.QueryList<any>;
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  compView_5:import1.AppView<import9.Child>;
  _Child_5_3:import10.Wrapper_Child;
  _text_6:any;
  _el_7:any;
  compView_7:import1.AppView<import9.Child>;
  _Child_7_3:import10.Wrapper_Child;
  _text_8:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Parent0,renderType_Parent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_Child_0 = new import8.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'button',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'Update Time via ViewChildren',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'child',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_5 = new import10.View_Child0(this.viewUtils,this,5,this._el_5);
    this._Child_5_3 = new import10.Wrapper_Child();
    this.compView_5.create(this._Child_5_3.context);
    this._text_6 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'child',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_7 = new import10.View_Child0(this.viewUtils,this,7,this._el_7);
    this._Child_7_3 = new import10.Wrapper_Child();
    this.compView_7.create(this._Child_7_3.context);
    this._text_8 = this.renderer.createText(this._el_0,'\n              ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.Child) && (5 === requestNodeIndex))) { return this._Child_5_3.context; }
    if (((token === import9.Child) && (7 === requestNodeIndex))) { return this._Child_7_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Child_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._Child_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    this.compView_5.detectChanges(throwOnChange);
    this.compView_7.detectChanges(throwOnChange);
    if (!throwOnChange) { if (this._viewQuery_Child_0.dirty) {
      this._viewQuery_Child_0.reset([
        this._Child_5_3.context,
        this._Child_7_3.context
      ]
      );
      this.context.viewChildren = this._viewQuery_Child_0;
      this._viewQuery_Child_0.notifyOnChanges();
    } }
  }
  destroyInternal():void {
    this.compView_5.destroy();
    this.compView_7.destroy();
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.updateViewChildren()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}